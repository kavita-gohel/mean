{"_quickTake.js":{"title":"Quick Take","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteKey &#x7D; from \"object-delete-key\";\n\n// deleting key 'c', with value 'd'\nassert.deepEqual(\n  deleteKey(\n    &#x7B;\n      a: \"b\",\n      c: \"d\",\n    &#x7D;,\n    &#x7B;\n      key: \"c\",\n      val: \"d\",\n    &#x7D;\n  ),\n  &#x7B; a: \"b\" &#x7D;\n);\n\n// deleting key 'b' with value - array ['c', 'd']\nassert.deepEqual(\n  deleteKey(\n    &#x7B;\n      a: &#x7B; e: [&#x7B; b: [\"c\", \"d\"] &#x7D;] &#x7D;,\n      b: [\"c\", \"d\"],\n    &#x7D;,\n    &#x7B;\n      key: \"b\",\n      val: [\"c\", \"d\"],\n    &#x7D;\n  ),\n  &#x7B;&#x7D;\n);\n// notice program cleaned after itself, it didn't leave empty \"a\" key"},"by-key-only.js":{"title":"Deletion by the key only","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteKey &#x7D; from \"object-delete-key\";\n\nassert.deepEqual(\n  deleteKey(\n    &#x7B;\n      a: \"a\",\n      b: \"jlfghdjkhkdfhgdf\",\n      c: [&#x7B; b: \"weuhreorhelhgljdhflghd\" &#x7D;],\n    &#x7D;,\n    &#x7B;\n      key: \"b\",\n    &#x7D;\n  ),\n  &#x7B; a: \"a\" &#x7D;\n);"},"by-value-only.js":{"title":"Deletion by the value only","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteKey &#x7D; from \"object-delete-key\";\n\nassert.deepEqual(\n  deleteKey(\n    &#x7B;\n      a: \"a\",\n      skldjfslfl: \"x\",\n      c: [&#x7B; dlfgjdlkjlfgjhfg: \"x\" &#x7D;],\n    &#x7D;,\n    &#x7B;\n      val: \"x\",\n    &#x7D;\n  ),\n  &#x7B; a: \"a\" &#x7D;\n);\n\n// same but without cleanup:\nassert.deepEqual(\n  deleteKey(\n    &#x7B;\n      a: \"a\",\n      skldjfslfl: \"x\",\n      c: [&#x7B; dlfgjdlkjlfgjhfg: \"x\" &#x7D;],\n    &#x7D;,\n    &#x7B;\n      val: \"x\",\n      cleanup: false,\n    &#x7D;\n  ),\n  &#x7B;\n    a: \"a\",\n    c: [&#x7B;&#x7D;], // <--- !\n  &#x7D;\n);"},"disable-cleanup.js":{"title":"Disable the cleanup which would otherwise happen after deletion","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteKey &#x7D; from \"object-delete-key\";\n\nassert.deepEqual(\n  deleteKey(\n    &#x7B;\n      a: &#x7B; e: [&#x7B; b: &#x7B; c: \"d\" &#x7D; &#x7D;] &#x7D;,\n      b: &#x7B; c: \"d\" &#x7D;,\n    &#x7D;,\n    &#x7B;\n      key: \"b\",\n      val: &#x7B; c: \"d\" &#x7D;,\n      cleanup: false,\n    &#x7D;\n  ),\n  &#x7B; a: &#x7B; e: [&#x7B;&#x7D;] &#x7D; &#x7D;\n);"},"wildcards.js":{"title":"Wildcards","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; deleteKey &#x7D; from \"object-delete-key\";\n\nassert.deepEqual(\n  deleteKey(\n    &#x7B;\n      a: [\"beep\", \"\", \"c\", \"boop\"],\n      bap: \"bap\",\n    &#x7D;,\n    &#x7B;\n      key: \"b*p\",\n      only: \"array\",\n    &#x7D;\n  ),\n  &#x7B;\n    a: [\"\", \"c\"],\n    bap: \"bap\",\n  &#x7D;\n);"}}